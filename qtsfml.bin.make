# GNU Make project makefile autogenerated by Premake

QMAKE ?= qmake
QT_BIN_DEFAULT     := $(shell $(QMAKE) -query QT_INSTALL_BINS)
QT_LIB_DEFAULT     := $(shell $(QMAKE) -query QT_INSTALL_LIBS)
QT_INCLUDE_DEFAULT := $(shell $(QMAKE) -query QT_INSTALL_HEADERS)
QT_PLUGINS_DEFAULT := $(shell $(QMAKE) -query QT_INSTALL_PLUGINS)

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

ifndef CC
  CC = gcc
endif

ifndef CXX
  CXX = g++
endif

ifndef AR
  AR = ar
endif

ifndef RESCOMP
  ifdef WINDRES
    RESCOMP = $(WINDRES)
  else
    RESCOMP = windres
  endif
endif

ifeq ($(config),debug)
  OBJDIR     = obj/debug/qtsfml.bin
  TARGETDIR  = .
  TARGET     = $(TARGETDIR)/qtsfml.bin
  DEFINES   += -DQT_CORE_LIB -D_REENTRANT -DQT_SHARED -DQT_GUI_LIB -DQT_WIDGETS_LIB
  INCLUDES  += -I$(QT_INCLUDE)/QtCore -I$(QT_INCLUDE) -I$(UIDIR) -I$(MOCDIR) -I$(QT_INCLUDE)/QtGui -I$(QT_INCLUDE)/QtWidgets
  CPPFLAGS  += -MMD -MP $(DEFINES) $(INCLUDES)
  CFLAGS    += $(CPPFLAGS) $(ARCH) -Wall -g -std=c++11 -fPIC
  CXXFLAGS  += $(CFLAGS) 
  LDFLAGS   += -L$(QT_LIB) -Wl,-rpath,$(QT_LIB) -lpthread
  RESFLAGS  += $(DEFINES) $(INCLUDES) 
  LIBS      += -lsfml-graphics -lsfml-window -lsfml-system -lQt5Core -lQt5Gui -lQt5Widgets
  LDDEPS    += 
  LINKCMD    = $(CXX) -o $(TARGET) $(OBJECTS) $(RESOURCES) $(ARCH) $(LIBS) $(LDFLAGS)
  QT_BIN = $(QT_BIN_DEFAULT)
  QT_INCLUDE = $(QT_INCLUDE_DEFAULT)
  QT_LIB = $(QT_LIB_DEFAULT)
  QT_PLUGINS = $(QT_PLUGINS_DEFAULT)
  QTMOC = $(QT_BIN)/moc
  QTUIC = $(QT_BIN)/uic
  QTRCC = $(QT_BIN)/rcc
  QTLUPDATE = $(QT_BIN)/lupdate
  QTLRELEASE = $(QT_BIN)/lrelease
  MOCDIR = $(OBJDIR)
  UIDIR = $(OBJDIR)
  RCCDIR = $(OBJDIR)
  QMDIR = $(TARGETDIR)
  MOCFLAGS = $(INCLUDES) $(DEFINES)

  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

ifeq ($(config),release)
  OBJDIR     = obj/release/qtsfml.bin
  TARGETDIR  = .
  TARGET     = $(TARGETDIR)/qtsfml.bin
  DEFINES   += -DQT_CORE_LIB -D_REENTRANT -DQT_SHARED -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_WIDGETS_LIB
  INCLUDES  += -I$(QT_INCLUDE)/QtCore -I$(QT_INCLUDE) -I$(UIDIR) -I$(MOCDIR) -I$(QT_INCLUDE)/QtGui -I$(QT_INCLUDE)/QtWidgets
  CPPFLAGS  += -MMD -MP $(DEFINES) $(INCLUDES)
  CFLAGS    += $(CPPFLAGS) $(ARCH) -O3 -std=c++11 -fPIC
  CXXFLAGS  += $(CFLAGS) 
  LDFLAGS   += -L$(QT_LIB) -s -Wl,-rpath,$(QT_LIB) -lpthread
  RESFLAGS  += $(DEFINES) $(INCLUDES) 
  LIBS      += -lsfml-graphics -lsfml-window -lsfml-system -lQt5Core -lQt5Gui -lQt5Widgets
  LDDEPS    += 
  LINKCMD    = $(CXX) -o $(TARGET) $(OBJECTS) $(RESOURCES) $(ARCH) $(LIBS) $(LDFLAGS)
  QT_BIN = $(QT_BIN_DEFAULT)
  QT_INCLUDE = $(QT_INCLUDE_DEFAULT)
  QT_LIB = $(QT_LIB_DEFAULT)
  QT_PLUGINS = $(QT_PLUGINS_DEFAULT)
  QTMOC = $(QT_BIN)/moc
  QTUIC = $(QT_BIN)/uic
  QTRCC = $(QT_BIN)/rcc
  QTLUPDATE = $(QT_BIN)/lupdate
  QTLRELEASE = $(QT_BIN)/lrelease
  MOCDIR = $(OBJDIR)
  UIDIR = $(OBJDIR)
  RCCDIR = $(OBJDIR)
  QMDIR = $(TARGETDIR)
  MOCFLAGS = $(INCLUDES) $(DEFINES)

  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

OBJECTS := \
	$(OBJDIR)/QTSFMLCanvas.o \
	$(OBJDIR)/Canvas.o \
	$(OBJDIR)/Main.o \
	$(OBJDIR)/Map.o \

RESOURCES := \

SHELLTYPE := msdos
ifeq (,$(ComSpec)$(COMSPEC))
  SHELLTYPE := posix
endif
ifeq (/bin,$(findstring /bin,$(SHELL)))
  SHELLTYPE := posix
endif

.PHONY: clean prebuild prelink

all: $(TARGETDIR) $(OBJDIR) prebuild prelink $(TARGET)
	@:

$(TARGET): $(GCH) $(OBJECTS) $(LDDEPS) $(RESOURCES)
	@echo Linking qtsfml.bin
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning qtsfml.bin
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -rf $(QT_DIRS)
else
	$(SILENT) if exist $(subst /,\\,$(QT_DIRS)) rmdir /s /q $(subst /,\\,$(QT_DIRS))
endif

prebuild:
	$(PREBUILDCMDS)

prelink:
	$(PRELINKCMDS)

ifneq (,$(PCH))
$(GCH): $(PCH)
	@echo $(notdir $<)
ifeq (posix,$(SHELLTYPE))
	-$(SILENT) cp $< $(OBJDIR)
else
	$(SILENT) xcopy /D /Y /Q "$(subst /,\,$<)" "$(subst /,\,$(OBJDIR))" 1>nul
endif
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -MF $(@:%.o=%.d) -c "$<"
endif

$(OBJDIR)/QTSFMLCanvas.o: src/Qt-sfml/QTSFML/QTSFMLCanvas.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -MF $(@:%.o=%.d) -c "$<"
$(OBJDIR)/Canvas.o: src/Qt-sfml/QTSFML/Canvas.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -MF $(@:%.o=%.d) -c "$<"
$(OBJDIR)/Main.o: src/Qt-sfml/QTSFML/Main.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -MF $(@:%.o=%.d) -c "$<"
$(OBJDIR)/Map.o: src/Qt-sfml/QTSFML/Map.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -MF $(@:%.o=%.d) -c "$<"

$(QT_DIRS):
ifeq (posix,$(SHELLTYPE))
else
endif

.PHONY: lupdate
lupdate:



prebuild: $(QT_DIRS) 

-include $(OBJECTS:%.o=%.d)
